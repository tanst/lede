name: SSH云编译

on: 
#  push:
#    branches: 
#      - master
#  schedule:
#    - cron: 0 22 * * 1
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 校验本地文件
      uses: actions/checkout@master

    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: 克隆源代码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 克隆增强功能源代码
      run: |
        git clone https://github.com/siryle1213/luci-app-fileassistant openwrt/package/luci-app-fileassistant
        git clone https://github.com/vernesong/OpenClash openwrt/package/tmp
        mv openwrt/package/tmp/luci-app-openclash openwrt/package

    - name: 更新 feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 升级 feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: SSH 连接
      uses: P3TERX/debugger-action@master

    - name: 导入自定义配置
      run: |
        echo '修改网关地址'
        sed -i 's/192.168.1.1/10.10.10.10/g' package/base-files/files/bin/config_generate
        make defconfig

    - name: 下载编译所需源码
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: 清理不必要的文件
      run: |
        cd openwrt
        rm -rf ./artifact/
        mkdir -p ./artifact/
        find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
        find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
        echo "::set-env name=FILENAME::$(echo "OpenWrt-firmware-x86-`date -d "+8 hour" +%Y%m%d-%H%M%S`")"
        
    - name: 上传固件
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.FILENAME }}
        path: ./openwrt/artifact/

